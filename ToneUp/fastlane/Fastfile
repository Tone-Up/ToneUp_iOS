# fastlane/Fastfile

default_platform(:ios)

platform :ios do
  desc "Build and upload to TestFlight"
  lane :beta do

    create_keychain(
      name: ENV["KEYCHAIN_NAME"],
      password: ENV["KEYCHAIN_PASSWORD"],
      timeout: 1800,
      default_keychain: true,
      unlock: true,
      lock_when_sleeps: false
    )

    # App Store Connect API 인증
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_API_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_CONTENT"]
    )

    # 인증서 및 프로비저닝 프로파일 가져오기
    match(
      type: "appstore",
      keychain_name: ENV["KEYCHAIN_NAME"],
      keychain_password: ENV["KEYCHAIN_PASSWORD"]
    )

    # TestFlight 최신 빌드 넘버 가져오기
    latest_build_number = latest_testflight_build_number(
      app_identifier: "com.jun.ToneUp",
      username: ENV["APPLE_DEV_USERNAME"]
    )

    # 빌드 번호 증가
    increment_build_number(
      build_number: latest_build_number + 1,
      xcodeproj: "ToneUp.xcodeproj"
    )

    update_project_provisioning(
      xcodeproj: "ToneUp.xcodeproj",
      target_filter: "ToneUp",
      profile: ENV["sigh_com.jun.ToneUp_appstore_profile-path"],
      code_signing_identity: "Apple Distribution"
    )

    # 앱 빌드
    build_app(
      project: "ToneUp.xcodeproj",
      scheme: "ToneUp",
      clean: true,
      export_method: "app-store",
      output_directory: "./build",
      include_bitcode: false,
    )

    # TestFlight 업로드
    upload_to_testflight(
      username: ENV["APPLE_DEV_USERNAME"],
      app_identifier: "com.jun.ToneUp"
    )
  end

  error do |lane, exception, options|
    UI.error("에러 발생 💥 : #{exception}")
  end
end
