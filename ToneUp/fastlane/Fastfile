# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# fastlane/Fastfile

default_platform(:ios)

platform :ios do
  PROJECT_NAME = "ToneUp.xcodeproj"
  TARGET_NAME = "ToneUp"

  # ✅ App Store Connect API Key 정의
  def my_api_key
  app_store_connect_api_key(
    key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
    issuer_id: ENV["APP_STORE_CONNECT_API_ISSUER_ID"],
    key_content: ENV["APP_STORE_CONNECT_API_KEY_CONTENT"],
    is_key_content_base64: true
  )
end

  desc "🔥 TestFlight 배포용 베타 lane"
  lane :beta do
    puts "✅ [DEBUG] Authorization ENV: #{ENV["MATCH_GIT_BASIC_AUTHORIZATION"] ? "SET" : "❌ EMPTY"}"

    match(
      type: "appstore",
      api_key: my_api_key # ✅ 이 줄 추가!
    )

    increment_build_number(xcodeproj: PROJECT_NAME)

    build_app(scheme: TARGET_NAME)
    upload_to_testflight
  end

  desc "🚀 App Store 정식 릴리즈"
  lane :release do
    match(
      type: "appstore",
      api_key: app_store_connect_api_key # ✅ 릴리즈에도 적용!
    )

    build_app(scheme: TARGET_NAME)
    upload_to_app_store
  end

  desc "🛠 버전/빌드 설정 후 git 태그 생성"
  lane :set_version do |options|
    version = options[:version]

    increment_version_number(
      version_number: version,
      xcodeproj: PROJECT_NAME,
      target: TARGET_NAME
    )

    commit_version_bump(message: "🔖 Version bump to #{version}")
    push_to_git_remote
    add_git_tag(tag: "v#{version}")
    push_git_tags
  end

  error do |lane, exception, options|
    UI.error("💥 [#{lane}]에서 에러 발생: #{exception.message}")
  end
end

